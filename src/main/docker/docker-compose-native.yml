version: "3.8"
services:
  # Quarkus Native Application
  quarkus-app:
    build:
      context: ../../../
      dockerfile: src/main/docker/Dockerfile.native
    image: quarkus-rest-native:latest
    container_name: local_quarkus_native_app
    ports:
      - "8081:8080"   # Changed from 8080 to avoid conflict with JVM version
      - "9001:9000"   # Changed from 9000 to avoid conflict with JVM version
    environment:
      DEMO_HOST: postgresql
      DEMO_PORT: 5432
      DEMO_DB: db_local
      DEMO_USERNAME: postgres
      DEMO_PASSWORD: postgres
      DEMO_SCHEMA: sch_local
      ENABLE_QUARKUS_MANAGEMENT: "true"
      # Redis configuration
      QUARKUS_REDIS_HOSTS: redis://redis:6379
      # MinIO configuration
      MINIO_ENDPOINT: http://minio:9090
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      # Tracing configuration
      QUARKUS_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://jaeger:4318/v1/traces
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/q/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s  # Native apps start much faster
    networks:
      - local_network
    # Native apps use much less memory
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # PostgreSQL Database
  postgresql:
    image: postgres:15-alpine
    container_name: local_postgres_native
    environment:
      POSTGRES_DB: db_local
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - local_network
    volumes:
      - pgdata_native:/var/lib/postgresql/data

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: local_redis_native
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - local_network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: local_minio_native
    ports:
      - "9090:9000"   # API
      - "9091:9001"   # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - local_network
    volumes:
      - minio_data_native:/data

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: local_jaeger_native
    ports:
      - "16686:16686" # Jaeger UI
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - local_network

networks:
  local_network:
    driver: bridge
    name: local_network_native

volumes:
  pgdata_native:
  minio_data_native:
