quarkus:
  application:
    name: ${APP_NAME:demo-service}
  management:
    enabled: ${ENABLE_QUARKUS_MANAGEMENT:false}
    port: 9000
    proxy:
      allow-forwarded: true
      allow-x-forwarded: true
      enable-forwarded-host: true
      enable-forwarded-prefix: true
  devservices:
    enabled: false
  log:
    level: INFO
    console:
      format: "%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n"

    category:
      "org.jboss.resteasy.reactive.client.logging":
        level: INFO
  #      "org.hibernate":
  #        level: DEBUG
  #      "org.hibernate.SQL":
  #        level: DEBUG

  datasource:
    db-kind: ${DEMO_DB_KIND:postgresql}
    username: ${DEMO_USERNAME}
    password: ${DEMO_PASSWORD}
    reactive:
      url: vertx-reactive:${DEMO_DB_KIND:postgresql}://${DEMO_HOST:localhost}:${DEMO_PORT:5432}/${DEMO_DB:db_local}?currentSchema=${DEMO_SCHEMA:sch_local}&prepareThreshold=0
      max-size: 16

    demo:
      db-kind: ${DEMO_DB_KIND:postgresql}
      username: ${DEMO_USERNAME}
      password: ${DEMO_PASSWORD}
      reactive:
        url: vertx-reactive:${DEMO_DB_KIND:postgresql}://${DEMO_HOST:localhost}:${DEMO_PORT:5432}/${DEMO_DB:db_local}?currentSchema=${DEMO_SCHEMA:sch_local}&prepareThreshold=0
        max-size: 16

  hibernate-orm:
    database:
      default-schema: ${DEMO_SCHEMA:sch_local}
      generation: create-drop
    sql-load-script: no-file

  http:
    access-log:
      pattern: "...traceId=%{X,traceId} spanId=%{X,spanId}"
    cors:
      ~: true
      origins: "*"
      methods: GET, OPTIONS, POST, PUT, DELETE, PATCH
      headers: accept, authorization, content-type, x-requested-with, X-Current-Org-Id
    enable-compression: ${ENABLE_HTTP_COMPRESSION:false}

  redis:
    hosts: ${REDIS_KIND_CONNECT:redis}://${REDIS_HOST:localhost}:${REDIS_PORT:6379}
    database: ${REDIS_DATABASE_INDEX:0}
    timeout: ${REDIS_CONNECTION_TIMEOUT:3s}

    demo:
      hosts: ${REDIS_KIND_CONNECT:redis}://${REDIS_HOST:localhost}:${REDIS_PORT:6379}
      timeout: ${REDIS_CONNECTION_TIMEOUT:3s}

  rest-client:
    logging:
      scope: request-response
    "demo-client":
      url: ${DEMO_CLIENT_URL}
      scope: ${DEMO_CLIENT_SCOPE:jakarta.inject.Singleton}

  tls:
    trust-all: true

  smallrye-openapi:
    info-title: Demo Service
    info-version: 1.0.0
    info-description: Just an example service
    info-terms-of-service: Your terms here
    info-contact-email: khoavu882@gmail.com
    info-contact-name: Vu Dang Khoa
    info-contact-url: http://aomacannada.can
    info-license-name: Apache 2.0
    info-license-url: https://www.apache.org/licenses/LICENSE-2.0.html
    security-scheme: jwt
    security-scheme-name: UserToken
    api-key-parameter-in: header
    api-key-parameter-name: authorization

  native:
    additional-build-args:
      - ${ADDITIONAL_BUILD_ARGS:--initialize-at-run-time=com.github.kaivu.infrastructure.config.ConfigsProvider}
    container-build: ${ENABLE_NATIVE_CONTAINER_BUILD:false}

minio:
  url: ${MINIO_URL}
  access-key: ${MINIO_ACCESS_KEY}
  secret-key: ${MINIO_SECRET_KEY}
